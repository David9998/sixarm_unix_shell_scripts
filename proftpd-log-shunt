#/bin/sh
set -euf

##
# ProFTPd log shunt: move each ProFTP log file to a backup.
#
# This script uses `copy` and `truncate` to do a kind of log
# rotation: the script moves each main file to a date file.
#
# Example main file:
#
#    xferlog
#
# Example date file:
#
#    xferlog.20180723022946
#
# This script approach is so we don't have to start/stop ProFTPd.
# We have tried other approaches such as log rotate, but we found
# these all require FTP to be restarted, which we don't want.
#
# We have asked the author of ProFTPd to consider ways to do
# something better than our approach, such as providing automatic
# log rotate within ProFTPd, or a safer way to start/stop ProFTPd.
#
# This approach may lose a bit of data: the data that arrives during
# the rsync. We are ok with this, for now, because our goal with the
# extended log is simply to capture aggregate statistics, and possibly
# and patterns during any troubleshooting we are doing (when we can
# manually pause this rsync-truncate script.
##

## See our equivalet shell script `file-snapshot-truncate`
file_snapshot_truncate(){
  file="$1" &&
  /usr/bin/sudo /usr/bin/test -e "$file" &&
  now=$(/bin/date -u "+%Y%m%d%H%M%S") && 
  /usr/bin/sudo /bin/cp "$file" "$file.$now" &&
  /usr/bin/sudo /usr/bin/truncate -s 0 "$file"
}

proftpd_log_shunt(){
  for f in controls.log extended.log proftpd.log xferlog xferreport; do
    file_snapshot_truncate "/var/log/proftpd/$f"
  }
}

proftpd_log_shunt
